{"version":3,"file":"static/js/962.61cb34cd.chunk.js","mappings":"yNAEaA,EAAOC,EAAAA,GAAAA,KAAH,kYASW,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IACf,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,IAAxB,IACE,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAtB,IAEE,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,SAAvB,IAChB,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAKbM,EAAWV,EAAAA,GAAAA,MAAH,sQAQI,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,IAAxB,G,uGCkC9B,UApDqB,WAEjB,IAAMK,GAAWC,EAAAA,EAAAA,MAeXC,GAAaC,EAAAA,EAAAA,MACbC,GAAaD,EAAAA,EAAAA,MACbE,GAAUF,EAAAA,EAAAA,MAEhB,OACI,UAAC,IAAD,CAAKG,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAASC,eAAe,SAASC,GAAG,OAA1F,WACI,SAAC,IAAD,WACI,2CAEJ,UAAC,IAAD,CAAMC,SAtBO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,GACIgB,EAAAA,EAAAA,IAAS,CACLC,KAAMH,EAAKI,SAASC,SAASC,MAC7BC,MAAOP,EAAKI,SAASG,MAAMD,MAC3BE,SAAUR,EAAKI,SAASI,SAASF,SAGzCN,EAAKS,OACR,EAWO,WACI,UAAC,IAAD,CAAUC,QAAStB,EAAnB,uBACI,kBACIuB,GAAIvB,EACJe,KAAK,WACLS,KAAK,aAEb,UAAC,IAAD,CAAUF,QAASnB,EAAnB,oBACI,kBACIoB,GAAIpB,EACJY,KAAK,QACLS,KAAK,cAEb,UAAC,IAAD,CAAUF,QAASpB,EAAnB,uBACI,kBACIqB,GAAIrB,EACJa,KAAK,WACLS,KAAK,WACLC,UAAU,UAElB,mBAAQD,KAAK,SAAb,2BAIf,C,wDC5DM,IAkBIvB,EAAS,eAACyB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACP,EAAIQ,GAWvD,OARER,IAFFQ,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/ContactForm/ContactForm.styled.js","pages/register/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    margin-top: 16px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    & button{\n        font-weight: 700;\n        margin: 0 auto;\n        max-width: 150px;\n        background-color: ${props => props.theme.colors.white};\n        border: ${props => props.theme.borders.card};\n        border-radius: ${props => props.theme.radii.md};\n        &:hover{\n            background-color: ${props => props.theme.colors.secondary};\n            color: ${props => props.theme.colors.white};\n        }\n    }\n`;\n\nexport const FormItem = styled.label`\n    display: flex;\n    justify-content: space-between;\n    & input{\n        width: 380px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n        border-bottom: ${props => props.theme.borders.card};\n        outline: none;\n    }\n`;","import { nanoid } from \"nanoid\"\nimport { useDispatch } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\n\n\nimport { register } from \"redux/auth/authOperations\";\n\nimport { Form, FormItem } from \"components/ContactForm/ContactForm.styled\";\nimport { Box } from \"Box\";\n\n\nconst RegisterPage = () => {\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(\n            register({\n                name: form.elements.userName.value,\n                email: form.elements.email.value,\n                password: form.elements.password.value,\n            })\n        );\n        form.reset();\n    }\n\n    const userNameId = nanoid();\n    const passwordId = nanoid();\n    const emailId = nanoid();\n    \n    return (\n        <Box display='flex' flexDirection='column' alignItems='center' justifyContent='center' pt='48px'>\n            <Helmet>\n                <title>Register</title>\n            </Helmet>\n            <Form onSubmit={handleSubmit}>\n                <FormItem htmlFor={userNameId}>Username:\n                    <input\n                        id={userNameId}\n                        name='userName'\n                        type=\"text\" />\n                </FormItem>\n                <FormItem htmlFor={emailId}>Email:\n                    <input\n                        id={emailId}\n                        name='email'\n                        type=\"email\" />\n                </FormItem>\n                <FormItem htmlFor={passwordId}>Password:\n                    <input\n                        id={passwordId}\n                        name='password'\n                        type=\"password\"\n                        minLength='7' />\n                </FormItem>\n                <button type=\"submit\">Register</button>\n            </Form>\n        </Box>\n    )\n}\n\nexport default RegisterPage;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Form","styled","props","theme","colors","white","borders","card","radii","md","secondary","FormItem","dispatch","useDispatch","userNameId","nanoid","passwordId","emailId","display","flexDirection","alignItems","justifyContent","pt","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","userName","value","email","password","reset","htmlFor","id","type","minLength","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}