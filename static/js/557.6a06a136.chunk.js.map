{"version":3,"file":"static/js/557.6a06a136.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactsForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/loader/Loader.styled.js","components/loader/Loader.jsx","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    margin-top: 16px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    & button{\n        font-weight: 700;\n        margin: 0 auto;\n        max-width: 150px;\n        background-color: ${props => props.theme.colors.white};\n        border: ${props => props.theme.borders.card};\n        border-radius: ${props => props.theme.radii.md};\n        &:hover{\n            background-color: ${props => props.theme.colors.secondary};\n            color: ${props => props.theme.colors.white};\n        }\n    }\n`;\n\nexport const FormItem = styled.label`\n    display: flex;\n    justify-content: space-between;\n    & input{\n        width: 380px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n        border-bottom: ${props => props.theme.borders.card};\n        outline: none;\n    }\n`;","import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport { Form, FormItem } from \"./ContactForm.styled\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"redux/contactsSlice\";\nimport { addContacts } from \"redux/operations\";\n\n\n\nexport const ContactForm = () => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    \n\n    const handleChange = (e) => {\n\n        const { name, value } = e.target;\n        \n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'number':\n                return setNumber(value);\n            default:\n                return;\n        };\n    }\n\n    const handleSubmit = e => {\n\n        e.preventDefault();\n\n\n        if (isAlreadyAdd(name)) {\n            return toast.error(`${name} is already add`);\n        };\n\n        dispatch(addContacts({ name, number }));\n\n        setName('');\n        setNumber('');\n\n    };\n\n    const isAlreadyAdd = (name) => {\n        return contacts.find((contact) => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase());\n        \n    };\n    \n\n    const nameId = nanoid();\n    const numberId = nanoid();\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormItem htmlFor={nameId}> Name:\n                <input\n                    id={nameId}\n                    type=\"text\"\n                    name='name'\n                    onChange={handleChange}\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required />\n            </FormItem>\n            <FormItem htmlFor={numberId}> Number:\n                <input\n                    id={numberId}\n                    type=\"tel\"\n                    name=\"number\"\n                    onChange={handleChange}\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required />\n            </FormItem>\n                    \n            <button type=\"submit\">Add contact</button>\n\n                \n        </Form>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    margin-top: ${props => props.theme.space[3]}px;\n    display: flex;\n    justify-content: space-between;\n    gap: 48px;\n    & button{\n        background-color: ${props => props.theme.colors.white};\n        border: ${props => props.theme.borders.card};\n        border-radius: ${props => props.theme.radii.md};\n        &:hover{\n            background-color: ${props => props.theme.colors.secondary};\n            color: ${props => props.theme.colors.white};\n        }\n    }\n`;","import PropTypes from \"prop-types\";\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from \"redux/operations\";\n\nimport { Item } from './ContactItem.styled';\n\n   \nexport const ContactItem = ({ contacts }) => {\n    \n    const { id, name, number } = contacts;\n    const dispatch = useDispatch();\n    \n    const handleDelete = () => dispatch(deleteContacts(id));\n\n    return (\n        <Item key={id}>\n            <p>{name}: {number}</p>\n            <button type=\"button\" onClick={handleDelete}>Delete</button>\n        </Item>\n    );\n};\n\n\nContactItem.propTypes = {\n    contacts: PropTypes.objectOf(PropTypes.string.isRequired),\n};","import { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from \"redux/contactsSlice\";\nimport { fetchContacts } from \"redux/operations\";\n\nexport const ContactList = () => {\n\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(state => state.filter);\n\n    const dispatch = useDispatch();\n   \n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    },[dispatch])\n\n    const getFilteredContacts = () => {\n\n        if (!filter) {\n            return contacts;\n        };\n\n        return contacts.filter(({ name }) => name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()));\n    };\n    \n    const filteredContacts = getFilteredContacts();\n    \n    return (\n        <ul>\n            {filteredContacts.map(contact => \n                <ContactItem key={contact.id} contacts={contact}  />)}\n        </ul>\n    )\n}\n\n\n\n","import styled from \"styled-components\";\n\nexport const FilterItem = styled.label`\n    display: flex;\n    flex-direction: column;\n    & input{\n        width: 209px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n        border-bottom: ${props => props.theme.borders.card};\n        outline: none;\n    }\n`;","import { nanoid } from \"nanoid\";\n\nimport { FilterItem } from './Filter.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n\n    const filterId = nanoid();\n\n\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter)\n\n    const handleChange = e => {\n        const { value } = e.target;\n        dispatch(addFilter(value));\n    };\n    \n    return (\n        <>\n        <FilterItem htmlFor={filterId}>\n            Find contact by name:\n            <input\n                id={filterId}\n                type=\"text\"\n                name='filter'\n                value={filter}\n                onChange={handleChange} />\n        </FilterItem>\n        </>\n    )\n};\n\n\n","import styled from \"styled-components\";\n\nexport const LoaderBox = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;","import { InfinitySpin } from \"react-loader-spinner\";\n\nimport { LoaderBox } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <LoaderBox>\n            <InfinitySpin width='200' color=\"#3f51b5\" />\n        </LoaderBox>\n    )\n}","import styled from \"styled-components\";\n\nexport const ContactFormWrapper = styled.div`\n    border-right: 1px solid gray;\n    height: 100vh;\n    padding-right: 24px;\n`\n\nexport const ContactsListWrapper = styled.div`\n    display: flex;\n    align-items: baseline;\n    flex-grow: 1;\n    justify-content: space-between;\n    padding-left: 24px;\n`","import { Helmet } from \"react-helmet\";\n\nimport { ContactForm } from \"components/ContactForm/ContactsForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/loader/Loader\";\n\n\nimport { Box } from \"Box\";\nimport { ContactFormWrapper,ContactsListWrapper } from \"./Phonebook.styled\";\n\nimport { getIsLoading } from \"redux/contactsSlice\";\nimport { getError } from \"redux/contactsSlice\";\nimport { useSelector } from \"react-redux\";\n\n\nconst PhoneBook = () => {\n    \n    const error = useSelector(getError);\n    const isLoading = useSelector(getIsLoading);\n\n\n    return (\n        <Box >\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n\n            {isLoading && !error && <Loader />}\n\n            <Box display='flex'>\n                <ContactFormWrapper>\n                    <Box\n                        as=\"h2\" \n                        pt=\"16px\"\n                        display=\"flex\"\n                        justifyContent='center'\n                            >Add contact:</Box>\n                    <ContactForm />\n                </ContactFormWrapper>\n                \n                <ContactsListWrapper>\n                    <div>\n                        <Box as=\"h2\" pt=\"16px\" display=\"flex\" >Contacts:</Box>\n                        <ContactList />\n                    </div>\n                    \n                    <div>\n                        <Filter />\n                    </div>\n                </ContactsListWrapper>\n\n                 \n            </Box>\n        </Box>\n        \n    );\n};\n\nexport default PhoneBook;\n"],"names":["Form","styled","props","theme","colors","white","borders","card","radii","md","secondary","FormItem","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","getContacts","handleChange","e","target","value","isAlreadyAdd","find","contact","toLocaleLowerCase","nameId","nanoid","numberId","onSubmit","preventDefault","toast","addContacts","htmlFor","id","type","onChange","pattern","title","required","Item","space","ContactItem","onClick","deleteContacts","ContactList","filter","state","useEffect","fetchContacts","filteredContacts","includes","map","FilterItem","Filter","filterId","addFilter","LoaderBox","Loader","width","color","ContactFormWrapper","ContactsListWrapper","error","getError","isLoading","getIsLoading","Box","Helmet","display","as","pt","justifyContent"],"sourceRoot":""}