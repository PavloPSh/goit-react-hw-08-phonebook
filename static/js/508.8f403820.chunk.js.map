{"version":3,"file":"static/js/508.8f403820.chunk.js","mappings":"yNAEaA,EAAOC,EAAAA,GAAAA,KAAH,kYASW,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IACf,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,IAAxB,IACE,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,MAAMC,EAAtB,IAEE,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,OAAOM,SAAvB,IAChB,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAKbM,EAAWV,EAAAA,GAAAA,MAAH,sQAQI,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,IAAxB,G,6ICpBjBK,EAAY,WAErB,IAAMC,GAAWC,EAAAA,EAAAA,MAgBXC,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MAEnB,OACI,SAACE,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAASC,eAAe,SAASC,GAAG,OAA1F,UAGI,UAAC,IAAD,CAAMC,SAnBO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACff,GACIgB,EAAAA,EAAAA,IAAM,CACFC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGzCL,EAAKO,OACR,EASO,WACI,UAAC,IAAD,CAAUC,QAASpB,EAAnB,oBACI,kBACIqB,KAAK,QACLC,KAAK,QACLC,GAAIvB,QAGZ,UAAC,IAAD,CAAUoB,QAASlB,EAAnB,uBACI,kBACImB,KAAK,WACLC,KAAK,WACLC,GAAIrB,QAGZ,mBAAQmB,KAAK,SAAb,uBAIf,ECvCD,EAXkB,WACd,OACI,iCACI,SAACG,EAAA,EAAD,WACI,6CAEJ,SAAC3B,EAAD,MAGX,C,wDCXM,IAkBII,EAAS,eAACwB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACN,EAAIO,GAWvD,OAREP,IAFFO,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/ContactForm/ContactForm.styled.js","components/loginForm/LoginForm.jsx","pages/login/LoginPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    margin-top: 16px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    & button{\n        font-weight: 700;\n        margin: 0 auto;\n        max-width: 150px;\n        background-color: ${props => props.theme.colors.white};\n        border: ${props => props.theme.borders.card};\n        border-radius: ${props => props.theme.radii.md};\n        &:hover{\n            background-color: ${props => props.theme.colors.secondary};\n            color: ${props => props.theme.colors.white};\n        }\n    }\n`;\n\nexport const FormItem = styled.label`\n    display: flex;\n    justify-content: space-between;\n    & input{\n        width: 380px;\n        border-top: none;\n        border-left: none;\n        border-right: none;\n        border-bottom: ${props => props.theme.borders.card};\n        outline: none;\n    }\n`;","import { nanoid } from \"nanoid\";\nimport { useDispatch } from \"react-redux\";\n\nimport { login } from \"redux/auth/authOperations\";\n\nimport { Form,FormItem } from \"components/ContactForm/ContactForm.styled\";\nimport { Box } from \"Box\";\n\n\nexport const LoginForm = () => {\n\n    const dispatch = useDispatch();\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(\n            login({\n                email: form.elements.email.value,\n                password: form.elements.password.value,\n            })\n        );\n        form.reset();\n    };\n\n    const emailId = nanoid();\n    const passwordId = nanoid();\n\n    return (\n        <Box display='flex' flexDirection='column' alignItems='center' justifyContent='center' pt='48px'>\n            \n\n            <Form onSubmit={handleSubmit}>\n                <FormItem htmlFor={emailId}>Email:\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        id={emailId}\n                        />\n                </FormItem>\n                <FormItem htmlFor={passwordId}>Password:\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        id={passwordId}\n                        />\n                </FormItem>\n                <button type=\"submit\">Login</button>\n            </Form>\n        </Box>\n    )\n};\n\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from \"components/loginForm/LoginForm\"\n\nconst LoginPage = () => {\n    return (\n        <>\n            <Helmet>\n                <title>Login page</title>\n            </Helmet>\n            <LoginForm />\n        </>\n    )\n};\n\nexport default LoginPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Form","styled","props","theme","colors","white","borders","card","radii","md","secondary","FormItem","LoginForm","dispatch","useDispatch","emailId","nanoid","passwordId","Box","display","flexDirection","alignItems","justifyContent","pt","onSubmit","e","preventDefault","form","currentTarget","login","email","elements","value","password","reset","htmlFor","type","name","id","Helmet","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}